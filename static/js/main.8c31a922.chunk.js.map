{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","setDifferentBaseLeft","base","input","fetch","then","res","json","result","setState","currencyValuesLeft","calculateNewValues","error","console","log","setDifferentBaseRight","currencyValuesRight","selected","valueRight","state","rates","currentlySelectedRight","valueLeft","currentlySelectedLeft","recalculateCurrencyLeft","evt","target","valueAsNumber","recalculateCurrencyRight","recalculateCurrencyDropLeft","value","recalculateCurrencyDropRight","currencyType","regionCodeReturn","this","className","name","id","onChange","map","code1","type","min","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c31a922.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencyType: 1,\n      currencyValuesLeft: {},\n      currencyValuesRight: {},\n      currentlySelectedLeft: \"CAD\",\n      currentlySelectedRight: \"CAD\",\n      valueLeft: 1,\n      valueRight: 1,\n      regionCodeReturn: [\"CAD\",\"HKD\",\"ISK\",\"PHP\",\"DKK\",\"HUF\",\"CZK\",\"GBP\",\"RON\",\"SEK\",\"IDR\",\"INR\",\"BRL\",\"RUB\",\"HRK\",\"JPY\",\"THB\",\"CHF\",\"EUR\",\"MYR\",\"BGN\",\"TRY\",\"CNY\",\"NOK\",\"NZD\",\"ZAR\",\"USD\",\"MXN\",\"SGD\",\"AUD\",\"ILS\",\"KRW\",\"PLN\"]\n    };\n  }\n\n  componentDidMount() {\n    this.setDifferentBaseLeft(this.state.currentlySelectedLeft, 5)\n    this.setDifferentBaseRight(this.state.currentlySelectedRight, 5)\n  }\n\n  setDifferentBaseLeft = (base, input) => {\n    fetch('https://api.exchangeratesapi.io/latest?base=' + base)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          currencyValuesLeft: result\n        }, ()=> {\n          this.calculateNewValues(input);\n        });\n\n      },\n      (error) => {\n        console.log(error);\n      }\n\n    )\n\n  }\n\n  setDifferentBaseRight = (base, input) => {\n    fetch('https://api.exchangeratesapi.io/latest?base=' + base)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          currencyValuesRight: result\n        }, ()=> {\n          this.calculateNewValues(input);\n        });\n\n      },\n      (error) => {\n        console.log(error);\n      }\n\n    )\n\n  }\n\n  calculateNewValues = (selected) => {\n      if(selected === 1 || selected === 3) { //left currency changed\n        this.setState({\n          valueRight: (this.state.currencyValuesLeft.rates[this.state.currentlySelectedRight] * this.state.valueLeft)\n        })\n      }\n      else if(selected === 2 || selected === 4) { //right currency changed\n        this.setState({\n          valueLeft: (this.state.currencyValuesRight.rates[this.state.currentlySelectedLeft] * this.state.valueRight)\n        })\n      }\n\n  }\n\n  recalculateCurrencyLeft = (evt) => {\n      this.setState({\n        valueLeft: evt.target.valueAsNumber,\n      }, () => {\n        this.calculateNewValues(1);\n      });\n  }\n\n  recalculateCurrencyRight = (evt) => {\n      this.setState({\n        valueRight: evt.target.valueAsNumber,\n      }, () => {\n        this.calculateNewValues(2);\n      });\n\n  }\n\n  recalculateCurrencyDropLeft = (evt) => {\n      this.setState({\n        currentlySelectedLeft: evt.target.value,\n      }, () => {\n        this.setDifferentBaseLeft(this.state.currentlySelectedLeft, 3);\n      });\n  }\n\n  recalculateCurrencyDropRight = (evt) => {\n      this.setState({\n        currentlySelectedRight: evt.target.value,\n      }, () => {\n        this.setDifferentBaseRight(this.state.currentlySelectedRight, 4);\n      });\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <select name=\"currency1\" id=\"currency1\" value={this.state.currentlySelectedLeft} onChange={this.recalculateCurrencyDropLeft}>\n          {\n            this.state.regionCodeReturn.map(code1 => <option value={code1} key={code1}>{code1}</option>)\n          }\n        </select>\n        <input type=\"number\" onChange={this.recalculateCurrencyLeft} value={this.state.valueLeft} id=\"1\" min=\"0\"></input>\n        <input type=\"number\" onChange={this.recalculateCurrencyRight} value={this.state.valueRight} id=\"2\" min=\"0\"></input>\n        <select name=\"currency2\" id=\"currency2\" value={this.state.currentlySelectedRight} onChange={this.recalculateCurrencyDropRight}>\n          {\n            this.state.regionCodeReturn.map(code1 => <option value={code1} key={code1}>{code1}</option>)\n          }\n        </select>\n        <p>*Rates may not be entirely accurate because of the API</p>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}