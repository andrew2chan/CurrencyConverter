{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","_super","call","setDifferentBaseLeft","base","input","fetch","then","res","json","result","setState","currencyValuesLeft","calculateNewValues","error","console","log","setDifferentBaseRight","currencyValuesRight","selected","valueRight","state","rates","currentlySelectedRight","valueLeft","currentlySelectedLeft","recalculateCurrencyLeft","evt","target","valueAsNumber","recalculateCurrencyRight","recalculateCurrencyDropLeft","value","recalculateCurrencyDropRight","currencyType","regionCodeReturn","react_default","a","createElement","className","name","id","onChange","map","code1","key","type","min","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"kNAmIeA,2DA/Hb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IAkBRO,qBAAuB,SAACC,EAAMC,GAC5BC,MAAM,+CAAiDF,GACtDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCb,EAAKc,SAAS,CACZC,mBAAoBF,GACnB,WACDb,EAAKgB,mBAAmBR,MAI5B,SAACS,GACCC,QAAQC,IAAIF,MAhCCjB,EAuCnBoB,sBAAwB,SAACb,EAAMC,GAC7BC,MAAM,+CAAiDF,GACtDG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCb,EAAKc,SAAS,CACZO,oBAAqBR,GACpB,WACDb,EAAKgB,mBAAmBR,MAI5B,SAACS,GACCC,QAAQC,IAAIF,MApDCjB,EA2DnBgB,mBAAqB,SAACM,GACF,IAAbA,GAA+B,IAAbA,EACnBtB,EAAKc,SAAS,CACZS,WAAavB,EAAKwB,MAAMT,mBAAmBU,MAAMzB,EAAKwB,MAAME,wBAA0B1B,EAAKwB,MAAMG,YAGhF,IAAbL,GAA+B,IAAbA,GACxBtB,EAAKc,SAAS,CACZa,UAAY3B,EAAKwB,MAAMH,oBAAoBI,MAAMzB,EAAKwB,MAAMI,uBAAyB5B,EAAKwB,MAAMD,cAnErFvB,EAyEnB6B,wBAA0B,SAACC,GACvB9B,EAAKc,SAAS,CACZa,UAAWG,EAAIC,OAAOC,eACrB,WACDhC,EAAKgB,mBAAmB,MA7EXhB,EAiFnBiC,yBAA2B,SAACH,GACxB9B,EAAKc,SAAS,CACZS,WAAYO,EAAIC,OAAOC,eACtB,WACDhC,EAAKgB,mBAAmB,MArFXhB,EA0FnBkC,4BAA8B,SAACJ,GAC3B9B,EAAKc,SAAS,CACZc,sBAAuBE,EAAIC,OAAOI,OACjC,WACDnC,EAAKM,qBAAqBN,EAAKwB,MAAMI,sBAAuB,MA9F/C5B,EAkGnBoC,6BAA+B,SAACN,GAC5B9B,EAAKc,SAAS,CACZY,uBAAwBI,EAAIC,OAAOI,OAClC,WACDnC,EAAKoB,sBAAsBpB,EAAKwB,MAAME,uBAAwB,MApGlE1B,EAAKwB,MAAQ,CACXa,aAAc,EACdtB,mBAAoB,GACpBM,oBAAqB,GACrBO,sBAAuB,MACvBF,uBAAwB,MACxBC,UAAW,EACXJ,WAAY,EACZe,iBAAkB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,QAVpMtC,uDAcnB,WACEG,KAAKG,qBAAqBH,KAAKqB,MAAMI,sBAAuB,GAC5DzB,KAAKiB,sBAAsBjB,KAAKqB,MAAME,uBAAwB,yBA0FhE,WACE,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,YAAYC,GAAG,YAAYT,MAAOhC,KAAKqB,MAAMI,sBAAuBiB,SAAU1C,KAAK+B,6BAE5F/B,KAAKqB,MAAMc,iBAAiBQ,IAAI,SAAAC,GAAK,OAAIR,EAAAC,EAAAC,cAAA,UAAQN,MAAOY,EAAOC,IAAKD,GAAQA,MAGhFR,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,SAASJ,SAAU1C,KAAK0B,wBAAyBM,MAAOhC,KAAKqB,MAAMG,UAAWiB,GAAG,IAAIM,IAAI,MACrGX,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,SAASJ,SAAU1C,KAAK8B,yBAA0BE,MAAOhC,KAAKqB,MAAMD,WAAYqB,GAAG,IAAIM,IAAI,MACvGX,EAAAC,EAAAC,cAAA,UAAQE,KAAK,YAAYC,GAAG,YAAYT,MAAOhC,KAAKqB,MAAME,uBAAwBmB,SAAU1C,KAAKiC,8BAE7FjC,KAAKqB,MAAMc,iBAAiBQ,IAAI,SAAAC,GAAK,OAAIR,EAAAC,EAAAC,cAAA,UAAQN,MAAOY,EAAOC,IAAKD,GAAQA,MAGhFR,EAAAC,EAAAC,cAAA,2EA1HUU,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAA/C,KAAA8C,EAAAE,KAAA,UAAqBhD,KAAK,SAAAiD,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,WAAP,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.dba887f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currencyType: 1,\r\n      currencyValuesLeft: {},\r\n      currencyValuesRight: {},\r\n      currentlySelectedLeft: \"CAD\",\r\n      currentlySelectedRight: \"CAD\",\r\n      valueLeft: 1,\r\n      valueRight: 1,\r\n      regionCodeReturn: [\"CAD\",\"HKD\",\"ISK\",\"PHP\",\"DKK\",\"HUF\",\"CZK\",\"GBP\",\"RON\",\"SEK\",\"IDR\",\"INR\",\"BRL\",\"RUB\",\"HRK\",\"JPY\",\"THB\",\"CHF\",\"EUR\",\"MYR\",\"BGN\",\"TRY\",\"CNY\",\"NOK\",\"NZD\",\"ZAR\",\"USD\",\"MXN\",\"SGD\",\"AUD\",\"ILS\",\"KRW\",\"PLN\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDifferentBaseLeft(this.state.currentlySelectedLeft, 5)\r\n    this.setDifferentBaseRight(this.state.currentlySelectedRight, 5)\r\n  }\r\n\r\n  setDifferentBaseLeft = (base, input) => {\r\n    fetch('https://api.exchangeratesapi.io/latest?base=' + base)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          currencyValuesLeft: result\r\n        }, ()=> {\r\n          this.calculateNewValues(input);\r\n        });\r\n\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  setDifferentBaseRight = (base, input) => {\r\n    fetch('https://api.exchangeratesapi.io/latest?base=' + base)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          currencyValuesRight: result\r\n        }, ()=> {\r\n          this.calculateNewValues(input);\r\n        });\r\n\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n\r\n    )\r\n\r\n  }\r\n\r\n  calculateNewValues = (selected) => {\r\n      if(selected === 1 || selected === 3) { //left currency changed\r\n        this.setState({\r\n          valueRight: (this.state.currencyValuesLeft.rates[this.state.currentlySelectedRight] * this.state.valueLeft)\r\n        })\r\n      }\r\n      else if(selected === 2 || selected === 4) { //right currency changed\r\n        this.setState({\r\n          valueLeft: (this.state.currencyValuesRight.rates[this.state.currentlySelectedLeft] * this.state.valueRight)\r\n        })\r\n      }\r\n\r\n  }\r\n\r\n  recalculateCurrencyLeft = (evt) => {\r\n      this.setState({\r\n        valueLeft: evt.target.valueAsNumber,\r\n      }, () => {\r\n        this.calculateNewValues(1);\r\n      });\r\n  }\r\n\r\n  recalculateCurrencyRight = (evt) => {\r\n      this.setState({\r\n        valueRight: evt.target.valueAsNumber,\r\n      }, () => {\r\n        this.calculateNewValues(2);\r\n      });\r\n\r\n  }\r\n\r\n  recalculateCurrencyDropLeft = (evt) => {\r\n      this.setState({\r\n        currentlySelectedLeft: evt.target.value,\r\n      }, () => {\r\n        this.setDifferentBaseLeft(this.state.currentlySelectedLeft, 3);\r\n      });\r\n  }\r\n\r\n  recalculateCurrencyDropRight = (evt) => {\r\n      this.setState({\r\n        currentlySelectedRight: evt.target.value,\r\n      }, () => {\r\n        this.setDifferentBaseRight(this.state.currentlySelectedRight, 4);\r\n      });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <select name=\"currency1\" id=\"currency1\" value={this.state.currentlySelectedLeft} onChange={this.recalculateCurrencyDropLeft}>\r\n          {\r\n            this.state.regionCodeReturn.map(code1 => <option value={code1} key={code1}>{code1}</option>)\r\n          }\r\n        </select>\r\n        <input type=\"number\" onChange={this.recalculateCurrencyLeft} value={this.state.valueLeft} id=\"1\" min=\"0\"></input>\r\n        <input type=\"number\" onChange={this.recalculateCurrencyRight} value={this.state.valueRight} id=\"2\" min=\"0\"></input>\r\n        <select name=\"currency2\" id=\"currency2\" value={this.state.currentlySelectedRight} onChange={this.recalculateCurrencyDropRight}>\r\n          {\r\n            this.state.regionCodeReturn.map(code1 => <option value={code1} key={code1}>{code1}</option>)\r\n          }\r\n        </select>\r\n        <p>*Rates may not be entirely accurate because of the API</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}